-- ToDoOS Database Schema for Oracle
-- إنشاء جداول نظام إدارة المشاريع

-- الاتصال بقاعدة البيانات
-- CONNECT todoos/password@localhost:1521/XE;

-- جدول المستخدمين
CREATE TABLE users (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username NVARCHAR2(50) UNIQUE NOT NULL,
    email NVARCHAR2(100) UNIQUE NOT NULL,
    password_hash NVARCHAR2(255) NOT NULL,
    full_name NVARCHAR2(100) NOT NULL,
    avatar NVARCHAR2(255),
    role NVARCHAR2(20) DEFAULT 'user' CHECK (role IN ('admin', 'manager', 'user')),
    is_active NUMBER(1) DEFAULT 1 CHECK (is_active IN (0,1)),
    is_ad_user NUMBER(1) DEFAULT 0 CHECK (is_ad_user IN (0,1)),
    ad_username NVARCHAR2(100),
    department NVARCHAR2(100),
    job_title NVARCHAR2(100),
    phone NVARCHAR2(20),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_login TIMESTAMP
);

-- جدول اللوحات
CREATE TABLE boards (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title NVARCHAR2(200) NOT NULL,
    description NCLOB,
    color NVARCHAR2(7) DEFAULT '#3B82F6',
    owner_id NUMBER NOT NULL,
    is_public NUMBER(1) DEFAULT 0 CHECK (is_public IN (0,1)),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_boards_owner FOREIGN KEY (owner_id) REFERENCES users(id) ON DELETE CASCADE
);

-- جدول الأعمدة
CREATE TABLE columns (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    board_id NUMBER NOT NULL,
    title NVARCHAR2(100) NOT NULL,
    position NUMBER NOT NULL,
    color NVARCHAR2(7) DEFAULT '#6B7280',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_columns_board FOREIGN KEY (board_id) REFERENCES boards(id) ON DELETE CASCADE
);

-- جدول البطاقات/المهام
CREATE TABLE cards (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    column_id NUMBER NOT NULL,
    title NVARCHAR2(200) NOT NULL,
    description NCLOB,
    priority NVARCHAR2(10) DEFAULT 'Medium' CHECK (priority IN ('Low', 'Medium', 'High')),
    due_date TIMESTAMP,
    start_date TIMESTAMP,
    position NUMBER NOT NULL,
    color NVARCHAR2(7),
    tags NCLOB, -- JSON format
    estimated_hours NUMBER(5,2),
    actual_hours NUMBER(5,2) DEFAULT 0,
    created_by NUMBER NOT NULL,
    assigned_to NUMBER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_cards_column FOREIGN KEY (column_id) REFERENCES columns(id) ON DELETE CASCADE,
    CONSTRAINT fk_cards_created_by FOREIGN KEY (created_by) REFERENCES users(id),
    CONSTRAINT fk_cards_assigned_to FOREIGN KEY (assigned_to) REFERENCES users(id)
);

-- جدول أعضاء البطاقات
CREATE TABLE card_members (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    card_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL,
    added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_card_members_card FOREIGN KEY (card_id) REFERENCES cards(id) ON DELETE CASCADE,
    CONSTRAINT fk_card_members_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT uk_card_member UNIQUE (card_id, user_id)
);

-- جدول أعضاء اللوحات
CREATE TABLE board_members (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    board_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL,
    role NVARCHAR2(20) DEFAULT 'member' CHECK (role IN ('owner', 'admin', 'member', 'viewer')),
    added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_board_members_board FOREIGN KEY (board_id) REFERENCES boards(id) ON DELETE CASCADE,
    CONSTRAINT fk_board_members_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT uk_board_member UNIQUE (board_id, user_id)
);

-- جدول الأنشطة
CREATE TABLE activities (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    card_id NUMBER,
    board_id NUMBER,
    user_id NUMBER NOT NULL,
    type NVARCHAR2(50) NOT NULL,
    message NVARCHAR2(500) NOT NULL,
    old_value NCLOB,
    new_value NCLOB,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_activities_card FOREIGN KEY (card_id) REFERENCES cards(id) ON DELETE CASCADE,
    CONSTRAINT fk_activities_board FOREIGN KEY (board_id) REFERENCES boards(id) ON DELETE CASCADE,
    CONSTRAINT fk_activities_user FOREIGN KEY (user_id) REFERENCES users(id)
);

-- جدول تسجيل الوقت
CREATE TABLE time_entries (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    card_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL,
    duration NUMBER NOT NULL, -- in minutes
    description NVARCHAR2(500),
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_time_entries_card FOREIGN KEY (card_id) REFERENCES cards(id) ON DELETE CASCADE,
    CONSTRAINT fk_time_entries_user FOREIGN KEY (user_id) REFERENCES users(id)
);

-- جدول المرفقات
CREATE TABLE attachments (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    card_id NUMBER NOT NULL,
    filename NVARCHAR2(255) NOT NULL,
    original_name NVARCHAR2(255) NOT NULL,
    file_size NUMBER NOT NULL,
    mime_type NVARCHAR2(100),
    file_path NVARCHAR2(500) NOT NULL,
    uploaded_by NUMBER NOT NULL,
    uploaded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_attachments_card FOREIGN KEY (card_id) REFERENCES cards(id) ON DELETE CASCADE,
    CONSTRAINT fk_attachments_user FOREIGN KEY (uploaded_by) REFERENCES users(id)
);

-- جدول التعليقات
CREATE TABLE comments (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    card_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL,
    content NCLOB NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_comments_card FOREIGN KEY (card_id) REFERENCES cards(id) ON DELETE CASCADE,
    CONSTRAINT fk_comments_user FOREIGN KEY (user_id) REFERENCES users(id)
);

-- جدول الإشعارات
CREATE TABLE notifications (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    title NVARCHAR2(200) NOT NULL,
    message NVARCHAR2(500) NOT NULL,
    type NVARCHAR2(50) NOT NULL,
    is_read NUMBER(1) DEFAULT 0 CHECK (is_read IN (0,1)),
    related_card_id NUMBER,
    related_board_id NUMBER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_notifications_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT fk_notifications_card FOREIGN KEY (related_card_id) REFERENCES cards(id) ON DELETE SET NULL,
    CONSTRAINT fk_notifications_board FOREIGN KEY (related_board_id) REFERENCES boards(id) ON DELETE SET NULL
);

-- جدول إعدادات النظام
CREATE TABLE system_settings (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    setting_key NVARCHAR2(100) UNIQUE NOT NULL,
    setting_value NCLOB,
    description NVARCHAR2(500),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- جدول إعدادات البريد الإلكتروني
CREATE TABLE email_configs (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    enabled NUMBER(1) DEFAULT 0 CHECK (enabled IN (0,1)),
    provider NVARCHAR2(50) DEFAULT 'exchange',
    server NVARCHAR2(200),
    port NVARCHAR2(10),
    username NVARCHAR2(200),
    password NVARCHAR2(500), -- encrypted
    use_ssl NUMBER(1) DEFAULT 1 CHECK (use_ssl IN (0,1)),
    use_tls NUMBER(1) DEFAULT 0 CHECK (use_tls IN (0,1)),
    task_email_address NVARCHAR2(200),
    auto_create_tasks NUMBER(1) DEFAULT 1 CHECK (auto_create_tasks IN (0,1)),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- جدول إعدادات قاعدة البيانات
CREATE TABLE database_configs (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    config_type NVARCHAR2(50) NOT NULL,
    host NVARCHAR2(200),
    port NVARCHAR2(10),
    database_name NVARCHAR2(100),
    username NVARCHAR2(200),
    password NVARCHAR2(500), -- encrypted
    connection_string NCLOB,
    is_active NUMBER(1) DEFAULT 1 CHECK (is_active IN (0,1)),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- جدول المهام المتكررة
CREATE TABLE recurring_tasks (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title NVARCHAR2(200) NOT NULL,
    description NCLOB,
    board_id NUMBER NOT NULL,
    column_id NUMBER NOT NULL,
    assigned_to NUMBER,
    priority NVARCHAR2(10) DEFAULT 'Medium' CHECK (priority IN ('Low', 'Medium', 'High')),
    recurrence_type NVARCHAR2(20) NOT NULL CHECK (recurrence_type IN ('daily', 'weekly', 'monthly', 'yearly')),
    recurrence_interval NUMBER DEFAULT 1,
    recurrence_days NVARCHAR2(20), -- for weekly: mon,wed,fri
    start_date TIMESTAMP NOT NULL,
    end_date TIMESTAMP,
    last_created TIMESTAMP,
    is_active NUMBER(1) DEFAULT 1 CHECK (is_active IN (0,1)),
    created_by NUMBER NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_recurring_tasks_board FOREIGN KEY (board_id) REFERENCES boards(id) ON DELETE CASCADE,
    CONSTRAINT fk_recurring_tasks_column FOREIGN KEY (column_id) REFERENCES columns(id),
    CONSTRAINT fk_recurring_tasks_assigned FOREIGN KEY (assigned_to) REFERENCES users(id),
    CONSTRAINT fk_recurring_tasks_created FOREIGN KEY (created_by) REFERENCES users(id)
);

-- إنشاء الفهارس للأداء
CREATE INDEX idx_users_email ON users(email);
CREATE INDEX idx_users_username ON users(username);
CREATE INDEX idx_boards_owner ON boards(owner_id);
CREATE INDEX idx_columns_board ON columns(board_id);
CREATE INDEX idx_cards_column ON cards(column_id);
CREATE INDEX idx_cards_created_by ON cards(created_by);
CREATE INDEX idx_cards_assigned_to ON cards(assigned_to);
CREATE INDEX idx_activities_card ON activities(card_id);
CREATE INDEX idx_activities_user ON activities(user_id);
CREATE INDEX idx_time_entries_card ON time_entries(card_id);
CREATE INDEX idx_notifications_user ON notifications(user_id);

-- إنشاء المحفزات للتحديث التلقائي
CREATE OR REPLACE TRIGGER trg_users_updated_at
    BEFORE UPDATE ON users
    FOR EACH ROW
BEGIN
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;
/

CREATE OR REPLACE TRIGGER trg_boards_updated_at
    BEFORE UPDATE ON boards
    FOR EACH ROW
BEGIN
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;
/

CREATE OR REPLACE TRIGGER trg_columns_updated_at
    BEFORE UPDATE ON columns
    FOR EACH ROW
BEGIN
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;
/

CREATE OR REPLACE TRIGGER trg_cards_updated_at
    BEFORE UPDATE ON cards
    FOR EACH ROW
BEGIN
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;
/

CREATE OR REPLACE TRIGGER trg_comments_updated_at
    BEFORE UPDATE ON comments
    FOR EACH ROW
BEGIN
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;
/

CREATE OR REPLACE TRIGGER trg_system_settings_updated_at
    BEFORE UPDATE ON system_settings
    FOR EACH ROW
BEGIN
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;
/

CREATE OR REPLACE TRIGGER trg_email_configs_updated_at
    BEFORE UPDATE ON email_configs
    FOR EACH ROW
BEGIN
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;
/

CREATE OR REPLACE TRIGGER trg_database_configs_updated_at
    BEFORE UPDATE ON database_configs
    FOR EACH ROW
BEGIN
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;
/

-- إدراج بيانات أولية
INSERT INTO system_settings (setting_key, setting_value, description) VALUES
('organization_name', 'ToDoOS', 'اسم المؤسسة');

INSERT INTO system_settings (setting_key, setting_value, description) VALUES
('system_url', 'http://localhost:3000', 'رابط النظام');

INSERT INTO system_settings (setting_key, setting_value, description) VALUES
('default_language', 'ar', 'اللغة الافتراضية');

INSERT INTO system_settings (setting_key, setting_value, description) VALUES
('timezone', 'Asia/Riyadh', 'المنطقة الزمنية');

INSERT INTO system_settings (setting_key, setting_value, description) VALUES
('date_format', 'DD/MM/YYYY', 'تنسيق التاريخ');

INSERT INTO system_settings (setting_key, setting_value, description) VALUES
('allow_self_registration', '1', 'السماح بالتسجيل الذاتي');

INSERT INTO system_settings (setting_key, setting_value, description) VALUES
('require_email_verification', '0', 'طلب تأكيد البريد الإلكتروني');

INSERT INTO system_settings (setting_key, setting_value, description) VALUES
('session_timeout', '480', 'انتهاء الجلسة بالدقائق');

-- إنشاء مستخدم إداري افتراضي
INSERT INTO users (username, email, password_hash, full_name, role, is_active) VALUES
('admin', 'admin@todoos.com', '$2b$10$rQZ9QmjlZKZvKJ9QmjlZKO', 'مدير النظام', 'admin', 1);

-- إنشاء لوحة تجريبية
INSERT INTO boards (title, description, owner_id) VALUES
('مشروع تجريبي', 'لوحة تجريبية لاختبار النظام', 1);

-- إنشاء أعمدة افتراضية
INSERT INTO columns (board_id, title, position) VALUES
(1, 'قائمة المهام', 1);

INSERT INTO columns (board_id, title, position) VALUES
(1, 'قيد التنفيذ', 2);

INSERT INTO columns (board_id, title, position) VALUES
(1, 'مكتمل', 3);

-- إنشاء مهمة تجريبية
INSERT INTO cards (column_id, title, description, created_by, position) VALUES
(1, 'مهمة تجريبية', 'هذه مهمة تجريبية لاختبار النظام', 1, 1);

-- تأكيد التغييرات
COMMIT;

-- رسالة النجاح
SELECT 'تم إنشاء جميع الجداول والبيانات الأولية بنجاح!' as result FROM DUAL;
